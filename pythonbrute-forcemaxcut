# Generating a graph of 4 nodes

# Number of nodes in graph
n = 4
# weights array
weights = [
    [0, 1, 1, 1],
    [1, 0, 1, 0],
    [1, 1, 0, 1],
    [1, 0, 1, 0]
]

best_cost_brute = 0

for b in range(2**n):
    x = [int(t) for t in reversed(list(bin(b)[2:].zfill(n)))]
    cost = 0
    for i in range(n):
        for j in range(n):
            cost = cost + weights[i][j] * x[i] * (1 - x[j])
    if best_cost_brute < cost:
        best_cost_brute = cost
        xbest_brute = x
colors = ["r" if xbest_brute[i] == 0 else "c" for i in range(n)]
print("\nBest solution = " + str(xbest_brute) + " -- Cost = " + str(best_cost_brute))